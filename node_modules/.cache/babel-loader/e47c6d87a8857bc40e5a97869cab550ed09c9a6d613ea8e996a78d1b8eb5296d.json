{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENGINEER\\\\recipe\\\\recipes\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  // Declare state variables\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // TODO: Validate form input and submit to server\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: name,\n              onChange: event => setName(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              value: email,\n              onChange: event => setEmail(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              value: password,\n              onChange: event => setPassword(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"y7AVIb+2dT29WONRxO7d74XBSmc=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Form","Button","Container","Row","Col","Register","name","setName","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","target","value"],"sources":["C:/Users/ENGINEER/recipe/recipes/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\nexport default function Register() {\r\n  // Declare state variables\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // TODO: Validate form input and submit to server\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col xs={12} md={6}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"text\" value={name} onChange={(event) => setName(event.target.value)} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC;AAEpE,eAAe,SAASC,QAAQ,GAAG;EAAA;EACjC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMa,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;;IAEtB;EACF,CAAC;;EAED,oBACE,QAAC,SAAS;IAAA,uBACR,QAAC,GAAG;MAAA,uBACF,QAAC,GAAG;QAAC,EAAE,EAAE,EAAG;QAAC,EAAE,EAAE,CAAE;QAAA,uBACjB,QAAC,IAAI;UAAC,QAAQ,EAAEF,YAAa;UAAA,wBAC3B,QAAC,IAAI,CAAC,KAAK;YAAA,wBACT,QAAC,IAAI,CAAC,KAAK;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAa,eAC7B,QAAC,IAAI,CAAC,OAAO;cAAC,IAAI,EAAC,MAAM;cAAC,KAAK,EAAEN,IAAK;cAAC,QAAQ,EAAGO,KAAK,IAAKN,OAAO,CAACM,KAAK,CAACE,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QAChF,eACb,QAAC,IAAI,CAAC,KAAK;YAAA,wBACT,QAAC,IAAI,CAAC,KAAK;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAa,eAC9B,QAAC,IAAI,CAAC,OAAO;cAAC,IAAI,EAAC,OAAO;cAAC,KAAK,EAAER,KAAM;cAAC,QAAQ,EAAGK,KAAK,IAAKJ,QAAQ,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACnF,eACb,QAAC,IAAI,CAAC,KAAK;YAAA,wBACT,QAAC,IAAI,CAAC,KAAK;cAAA,UAAC;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAa,eACjC,QAAC,IAAI,CAAC,OAAO;cAAC,IAAI,EAAC,UAAU;cAAC,KAAK,EAAEN,QAAS;cAAC,QAAQ,EAAGG,KAAK,IAAKF,WAAW,CAACE,KAAK,CAACE,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QAC5F,eACb,QAAC,MAAM;YAAC,OAAO,EAAC,SAAS;YAAC,IAAI,EAAC,QAAQ;YAAA,UAAC;UAExC;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACI;AAEhB;AAAC,GAtCuBX,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}