{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENGINEER\\\\recipe\\\\recipes\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { NavLink } from 'react-router-dom';\nimport { useFormik, ErrorMessage, Field, Formik } from 'formik';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { rules } from '../schema/rules';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  axios.defaults.withCredentials = true;\n  const Navigate = useNavigate();\n  const Formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: {\n      rules\n    },\n    onSubmit: function (values) {\n      const mail = values.email;\n      axios.post(\"http://localhost:5000/login\", values).then(response => {\n        if (response) {\n          console.log(\"details found\");\n          Navigate(\"/recipes\");\n        } else {\n          console.log(\"no records found\");\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          style: {\n            margin: 'auto auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-2 m-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"Signup\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 6\n                }, this), /*#__PURE__*/_jsxDEV(Formik, {\n                  initialValues: {\n                    username: '',\n                    email: ''\n                  },\n                  onSubmit: values => {\n                    // same shape as initial values\n                    console.log(values);\n                  },\n                  children: _ref => {\n                    let {\n                      errors,\n                      touched,\n                      validateField,\n                      validateForm\n                    } = _ref;\n                    return /*#__PURE__*/_jsxDEV(Form, {\n                      children: [/*#__PURE__*/_jsxDEV(Field, {\n                        name: \"email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 12\n                      }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: errors.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 46\n                      }, this), /*#__PURE__*/_jsxDEV(Field, {\n                        name: \"username\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 12\n                      }, this), errors.username && touched.username && /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: errors.username\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 52\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: () => validateField('username'),\n                        children: \"Check Username\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 12\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: () => validateForm().then(() => console.log('blah')),\n                        children: \"Validate All\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 12\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 12\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 10\n                    }, this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 6\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 2\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"Uzu4KKcCiyGsv16p4IB7VONhrxk=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Form","Button","Container","Row","Col","Card","Header","Footer","NavLink","useFormik","ErrorMessage","Field","Formik","axios","useNavigate","rules","Login","defaults","withCredentials","Navigate","initialValues","email","password","validationSchema","onSubmit","values","mail","post","then","response","console","log","margin","username","errors","touched","validateField","validateForm"],"sources":["C:/Users/ENGINEER/recipe/recipes/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Container, Row, Col, Card} from 'react-bootstrap';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useFormik,ErrorMessage,Field,Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { rules } from '../schema/rules';\r\n\r\n\r\nexport default function Login() {\r\n  axios.defaults.withCredentials = true;\r\n  const Navigate = useNavigate();\r\n  const Formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    validationSchema: {rules}\r\n    ,\r\n    onSubmit: function(values){\r\n      const mail = values.email;\r\n\r\n      axios.post(\"http://localhost:5000/login\",values).then(response=>{\r\n        if(response){\r\n          console.log(\"details found\");\r\n          Navigate(\"/recipes\");\r\n        }else{\r\n          console.log(\"no records found\");\r\n        }\r\n      });\r\n    } \r\n  })\r\n\r\n  return (\r\n    <>\r\n        <Header />\r\n    <Container>\r\n      <Row>\r\n        <Col xs={12} md={6} style={{margin: 'auto auto'}}>\r\n            <Card className=\"p-2 m-4\">\r\n                <Card.Title>Login</Card.Title>\r\n                <Card.Body>\r\n                                  {/*<Form onSubmit={Formik.handleSubmit}>\r\n                                    <Form.Group>\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" name=\"email\" value={Formik.values.email} onChange={Formik.handleChange} />\r\n                                    <ErrorMessage name=\"email\" />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"password\" value={Formik.values.password} onChange={Formik.handleChange} />\r\n                                    </Form.Group>\r\n                                    <Button variant=\"primary\" className=\"mt-2\" type=\"submit\">\r\n                                        Login\r\n                                    </Button>\r\n                                    <br />\r\n                                    <NavLink to=\"/register\">Dont Have an acoount ?</NavLink><br />\r\n                                    <NavLink to=\"/forgot\">Forgot password</NavLink>\r\n                                    </Form>*/}\r\n <div>\r\n     <h1>Signup</h1>\r\n     <Formik\r\n       initialValues={{\r\n         username: '',\r\n         email: '',\r\n       }}\r\n       onSubmit={values => {\r\n         // same shape as initial values\r\n         console.log(values);\r\n       }}\r\n     >\r\n       {({ errors, touched, validateField, validateForm }) => (\r\n         <Form>\r\n           <Field name=\"email\" />\r\n           {errors.email && touched.email && <div>{errors.email}</div>}\r\n \r\n           <Field name=\"username\" />\r\n           {errors.username && touched.username && <div>{errors.username}</div>}\r\n           {/** Trigger field-level validation\r\n            imperatively */}\r\n           <button type=\"button\" onClick={() => validateField('username')}>\r\n             Check Username\r\n           </button>\r\n           {/** Trigger form-level validation\r\n            imperatively */}\r\n           <button\r\n             type=\"button\"\r\n             onClick={() => validateForm().then(() => console.log('blah'))}\r\n           >\r\n             Validate All\r\n           </button>\r\n           <button type=\"submit\">Submit</button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n   </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}