{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENGINEER\\\\recipe\\\\recipes\\\\src\\\\pages\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { Form, Button, Container, Row, Col, Card } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required'),\n  confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm password is required')\n});\nfunction ResetPassword() {\n  _s();\n  const Navigate = useNavigate();\n  const {\n    email\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            margin: 'auto auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-2 m-4\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Reset password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                initialValues: {\n                  password: '',\n                  confirmPassword: ''\n                },\n                validationSchema: validationSchema,\n                onSubmit: (values, _ref) => {\n                  let {\n                    setSubmitting\n                  } = _ref;\n                  setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    setSubmitting(false);\n                  }, 400);\n                },\n                children: _ref2 => {\n                  let {\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Form, {\n                    onSubmit: handleSubmit,\n                    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"New password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 9\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"password\",\n                        name: \"password\",\n                        value: values.password,\n                        onChange: handleChange,\n                        onBlur: handleBlur,\n                        isInvalid: touched.password && errors.password\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 9\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                        type: \"invalid\",\n                        children: errors.password\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 9\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 7\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 9\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        type: \"password\",\n                        name: \"confirmPassword\",\n                        value: values.confirmPassword,\n                        onChange: handleChange,\n                        onBlur: handleBlur,\n                        isInvalid: touched.confirmPassword && errors.confirmPassword\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 9\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                        type: \"invalid\",\n                        children: errors.confirmPassword\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 9\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 7\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      disabled: isSubmitting,\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 7\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 5\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ResetPassword, \"0pvFRX6g28zDSlMmor6GrWRftzA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","Header","Footer","Form","Button","Container","Row","Col","Card","Formik","NavLink","useFormik","axios","useNavigate","useParams","Yup","validationSchema","object","shape","password","string","min","required","confirmPassword","oneOf","ref","ResetPassword","Navigate","email","margin","values","setSubmitting","setTimeout","alert","JSON","stringify","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["C:/Users/ENGINEER/recipe/recipes/src/pages/ResetPassword.js"],"sourcesContent":["import React from 'react'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport { Form, Button, Container, Row, Col, Card} from 'react-bootstrap';\r\nimport { Formik } from 'formik'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as Yup from 'yup'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(8, 'Password must be at least 8 characters')\r\n    .required('Password is required'),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n    .required('Confirm password is required')\r\n})\r\n\r\nfunction ResetPassword() {\r\n    const Navigate = useNavigate();\r\n    const {email} = useParams();\r\n\r\n\r\n  return (\r\n    <>\r\n        <Header />\r\n        <Container>\r\n      <Row>\r\n        <Col  style={{margin: 'auto auto'}}>\r\n            <Card className=\"p-2 m-4\">\r\n                <Card.Title>Reset password</Card.Title>\r\n                <Card.Body>\r\n                {/*<Formik\r\n      initialValues={{\r\n        password: '',\r\n        confirmpassword: ''\r\n      }}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n\r\n        values.email = \"franknyaboga8@gmail.com\";\r\n        axios.post(\"http://localhost:5000/passwordchange\",values).then(response=>{\r\n          if(response){\r\n            console.log(\"details found\");\r\n            Navigate(\"/recipes\");\r\n          }else{\r\n            console.log(\"no records found\");\r\n          }\r\n        });\r\n\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2))\r\n          setSubmitting(false)\r\n        }, 400)\r\n        \r\n      }}\r\n    >\r\n      {({    \r\n       values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting, }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group>\r\n                          <Form.Label>New password</Form.Label>\r\n                          <Form.Control type=\"password\" name=\"password\"\r\n                                    value={values.password} onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    isInvalid={touched.password && errors.password}/>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.password}\r\n                          </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"confirmpassword\"\r\n              value={values.confirmpassword}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              isInvalid={touched.confirmpassword && errors.confirmpassword}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.confirmpassword}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n                    <Button variant=\"primary\" className=\"mt-2\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form> \r\n      )}\r\n        </Formik>*/}\r\n        <Formik\r\n  initialValues={{\r\n    password: '',\r\n    confirmPassword: ''\r\n  }}\r\n  validationSchema={validationSchema}\r\n  onSubmit={(values, { setSubmitting }) => {\r\n    setTimeout(() => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      setSubmitting(false);\r\n    }, 400);\r\n  }}\r\n>\r\n  {({ values, errors, touched, handleChange, handleBlur, handleSubmit,isSubmitting }) => (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Label>New password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          isInvalid={touched.password && errors.password}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.password}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={values.confirmPassword}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          isInvalid={touched.confirmPassword && errors.confirmPassword}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.confirmPassword}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Button type=\"submit\" disabled={isSubmitting}>\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  )}\r\n</Formik>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n        <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetPassword\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}