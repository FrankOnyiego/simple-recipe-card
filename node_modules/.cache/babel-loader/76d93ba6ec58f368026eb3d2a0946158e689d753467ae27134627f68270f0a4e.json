{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENGINEER\\\\recipe\\\\recipes\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { Formik } from 'formik';\nimport { rules } from '../schema/rules';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  axios.defaults.withCredentials = true;\n  const Navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: rules,\n      onSubmit: (values, actions) => {\n        // handle form submission\n        const mail = values.email;\n        axios.post(\"http://localhost:5000/login\", values).then(response => {\n          if (response) {\n            console.log(\"details found\");\n            Navigate(\"/recipes\");\n          } else {\n            console.log(\"no records found\");\n          }\n        });\n      },\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      children: _ref => {\n        let {\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: values.email,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              isInvalid: touched.email && errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              isInvalid: touched.password && errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"mt-2\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"BsdYp51khjvN8P3D7sGmxzWyV1E=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\n;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Formik","rules","Form","Button","axios","useNavigate","Header","Footer","Login","defaults","withCredentials","Navigate","values","actions","mail","email","post","then","response","console","log","password","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"sources":["C:/Users/ENGINEER/recipe/recipes/src/pages/Login.js"],"sourcesContent":["import { Formik } from 'formik';\r\nimport { rules } from '../schema/rules';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nexport default function Login() {\r\n  axios.defaults.withCredentials = true;\r\n  const Navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n    <Header />\r\n    <Formik\r\n      validationSchema={rules}\r\n      onSubmit={(values, actions) => {\r\n        // handle form submission\r\n        const mail = values.email;\r\n\r\n        axios.post(\"http://localhost:5000/login\",values).then(response=>{\r\n          if(response){\r\n            console.log(\"details found\");\r\n            Navigate(\"/recipes\");\r\n          }else{\r\n            console.log(\"no records found\");\r\n          }\r\n        });\r\n      }}\r\n      initialValues={{ email: '', password: '' }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              isInvalid={touched.email && errors.email}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.email}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              isInvalid={touched.password && errors.password}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.password}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button variant=\"primary\" className=\"mt-2\" type=\"submit\" disabled={isSubmitting}>\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}