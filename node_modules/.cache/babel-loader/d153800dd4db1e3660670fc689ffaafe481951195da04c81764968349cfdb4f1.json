{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENGINEER\\\\recipe\\\\recipes\\\\src\\\\admin\\\\pages\\\\Reply.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Headertwo from '../Header2';\nimport Footer from '../../components/Footer';\nimport { Formik, Form, Field } from 'formik';\nimport { Container, Row, Col, FormGroup, Label, Input, Button } from 'reactstrap';\nimport * as Yup from 'yup';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messageSchema = Yup.object().shape({\n  message: Yup.string().min(10, 'Message must be at least 10 characters').required('Message is required')\n});\nfunction Reply() {\n  _s();\n  const {\n    msid\n  } = useParams();\n  const [recipes, setRecipes] = useState([]);\n  async function getData() {\n    try {\n      const response = await axios.get(`http://localhost:5000/reply/${msid}`);\n      console.log(response.data);\n      setRecipes(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Headertwo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), recipes.map(item => /*#__PURE__*/_jsxDEV(Container, {\n      className: \"m-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-weight-bold\",\n          children: [\"From: \", item.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 78\n        }, this), \"        \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 92\n        }, this), item.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            size: 8,\n            offset: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              message: ''\n            },\n            validationSchema: messageSchema,\n            onSubmit: (values, _ref) => {\n              let {\n                setSubmitting,\n                resetForm\n              } = _ref;\n              // Send the message here\n              values.to = item.email;\n              axios.post('/email', values);\n              console.log(values.message);\n              setSubmitting(false);\n              resetForm();\n            },\n            children: _ref2 => {\n              let {\n                errors,\n                touched,\n                isSubmitting,\n                values\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    for: \"message\",\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-weight-bold\",\n                      children: [\"To: \", item.email]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 49\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"textarea\",\n                    name: \"message\",\n                    id: \"message\",\n                    value: values.message,\n                    placeholder: \"Enter your reply\",\n                    invalid: errors.message && touched.message,\n                    rows: 5\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 27\n                  }, this), errors.message && touched.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-danger\",\n                    children: errors.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 29\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"submit\",\n                  disabled: isSubmitting,\n                  children: \"Send Reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Reply, \"c/FsGKA2skGoHj9InnCR/E2alaw=\", false, function () {\n  return [useParams];\n});\n_c = Reply;\nexport default Reply;\nvar _c;\n$RefreshReg$(_c, \"Reply\");","map":{"version":3,"names":["React","useState","useEffect","Headertwo","Footer","Formik","Form","Field","Container","Row","Col","FormGroup","Label","Input","Button","Yup","useParams","axios","messageSchema","object","shape","message","string","min","required","Reply","msid","recipes","setRecipes","getData","response","get","console","log","data","error","map","item","email","size","offset","values","setSubmitting","resetForm","to","post","errors","touched","isSubmitting"],"sources":["C:/Users/ENGINEER/recipe/recipes/src/admin/pages/Reply.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Headertwo from '../Header2'\r\nimport Footer from '../../components/Footer'\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { Container, Row, Col, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport * as Yup from 'yup';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst messageSchema = Yup.object().shape({\r\n  message: Yup.string()\r\n    .min(10, 'Message must be at least 10 characters')\r\n    .required('Message is required'),\r\n});\r\n\r\nfunction Reply() {\r\n    const { msid } = useParams();\r\n\r\n    const[recipes, setRecipes]=useState([]);\r\n  \r\n      async function getData() {\r\n          try {\r\n            const response = await axios.get(`http://localhost:5000/reply/${msid}`);\r\n            console.log(response.data);\r\n            setRecipes(response.data);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }\r\n        \r\n        useEffect(()=>{\r\n          getData();\r\n        },[])\r\n\r\n  return (\r\n   <>\r\n   <Headertwo />\r\n   {recipes.map((item)=>(\r\n            <Container className=\"m-3\">\r\n            <p className=\"text-left\">\r\n                <span className=\"font-weight-bold\">From: {item.email}</span> <br />        <br />\r\n                {item.message}\r\n        </p>\r\n              <Row>\r\n                <Col md={{ size: 8, offset: 2 }}>\r\n                  <Formik\r\n                    initialValues={{ message: '' }}\r\n                    validationSchema={messageSchema}\r\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                      // Send the message here\r\n                       values.to = item.email;\r\n                        axios.post('/email',values);\r\n\r\n                      console.log(values.message);\r\n                      setSubmitting(false);\r\n                      resetForm();\r\n                    }}\r\n                  >\r\n                    {({ errors, touched, isSubmitting,values }) => (\r\n        \r\n                      <Form>\r\n                        <FormGroup>\r\n                          <Label for=\"message\"> <span className=\"font-weight-bold\">To: {item.email}</span> </Label>\r\n                          <Input type=\"textarea\" \r\n                          name=\"message\" \r\n                          id=\"message\" \r\n                          value={values.message}\r\n                          placeholder=\"Enter your reply\"  \r\n                          invalid={errors.message && touched.message} rows={5}/>\r\n                          {errors.message && touched.message ? (\r\n                            <div className=\"text-danger\">{errors.message}</div>\r\n                          ) : null}\r\n                        </FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>\r\n                          Send Reply\r\n                        </Button>\r\n                      </Form>\r\n                    )}\r\n                  </Formik>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n   ))\r\n    }\r\n   <Footer />\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Reply\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}