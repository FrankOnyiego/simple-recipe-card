{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ENGINEER\\\\recipe\\\\recipes\\\\src\\\\components\\\\Contact.js\";\nimport React from 'react';\nimport * as yup from 'yup';\nimport { Formik, Form, Field } from 'formik';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  const validationSchema = yup.object().shape({\n    name: yup.string().required('Name is required'),\n    email: yup.string().email('Invalid email').required('Email is required'),\n    message: yup.string().required('Message is required')\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      validationSchema: validationSchema,\n      onSubmit: (values, actions) => {\n        // handle form submission here\n        console.log(values);\n        actions.setSubmitting(false);\n      },\n      className: \"ml-auto\",\n      children: _ref => {\n        let {\n          isSubmitting,\n          errors,\n          touched\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"name\",\n              name: \"name\",\n              placeholder: \"Enter your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 11\n            }, this), errors.name && touched.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 42\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              className: \"form-control\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"Enter your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 44\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              component: \"textarea\",\n              className: \"form-control\",\n              id: \"message\",\n              name: \"message\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 11\n            }, this), errors.message && touched.message ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 48\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","yup","Formik","Form","Field","Contact","validationSchema","object","shape","name","string","required","email","message","values","actions","console","log","setSubmitting","isSubmitting","errors","touched"],"sources":["C:/Users/ENGINEER/recipe/recipes/src/components/Contact.js"],"sourcesContent":["import React from 'react'\r\nimport * as yup from 'yup';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nfunction Contact() {\r\n    const validationSchema = yup.object().shape({\r\n        name: yup.string().required('Name is required'),\r\n        email: yup\r\n          .string()\r\n          .email('Invalid email')\r\n          .required('Email is required'),\r\n        message: yup.string().required('Message is required'),\r\n      });\r\n  return (\r\n  <>\r\n   <Formik\r\n    initialValues={{ name: '', email: '', message: '' }}\r\n    validationSchema={validationSchema}\r\n    onSubmit={(values, actions) => {\r\n      // handle form submission here\r\n      console.log(values);\r\n      actions.setSubmitting(false);\r\n    }}\r\n\r\n    className=\"ml-auto\"\r\n  >\r\n    {({ isSubmitting, errors, touched }) => (\r\n      <Form>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <Field type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Enter your name\" />\r\n          {errors.name && touched.name ? <div className=\"text-red\">{errors.name}</div> : null}\r\n        </div>\r\n        <div className=\"form-group col-md-6\"> \r\n          <label htmlFor=\"email\">Email</label>\r\n          <Field type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" />\r\n          {errors.email && touched.email ? <div>{errors.email}</div> : null}\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"message\">Message</label>\r\n          <Field component=\"textarea\" className=\"form-control\" id=\"message\" name=\"message\" rows=\"3\" />\r\n          {errors.message && touched.message ? <div>{errors.message}</div> : null}\r\n        </div>\r\n        <div className=\"form-group col-md-6\">\r\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}